name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Process domain data
        run: |
          python scripts/convert_csv_to_json.py

      - name: Debug source directories
        run: |
          echo "Contents of data/output directory:"
          ls -la data/output/
          echo "=============================="
          echo "Source custom_previews count:"
          find data/output/custom_previews -type f | wc -l
          echo "Files in data/output/custom_previews:"
          ls -la data/output/custom_previews/

      - name: Prepare docs directory
        shell: bash
        run: |
          # Create docs/data directory structure
          mkdir -p docs/data/output/custom_previews
          
          # Debug before data copy
          echo "=============================="
          echo "Docs directory structure before data copy:"
          ls -la docs/
          
          # Copy data files with verbose output
          echo "=============================="
          echo "Copying data files..."
          cp -rv data/output/* docs/data/output/
          
          # Debug after data copy
          echo "=============================="
          echo "Docs custom_previews count:"
          find docs/data/output/custom_previews -type f | wc -l
          echo "Files in docs/data/output/custom_previews:"
          ls -la docs/data/output/custom_previews/
          
          # Create required files if they don't exist
          touch docs/.nojekyll
          echo "topdomain.club" > docs/CNAME
          
          # Final debug: List full docs directory structure
          echo "=============================="
          echo "Final docs directory structure:"
          find docs -type f | sort

      - name: Deploy to GitHub Pages
        id: deployment
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs
          clean: true
          force: true
          commit-message: "Deploy site with force option"